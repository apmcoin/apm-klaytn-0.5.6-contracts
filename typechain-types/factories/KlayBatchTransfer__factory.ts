/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KlayBatchTransfer,
  KlayBatchTransferInterface,
} from "../KlayBatchTransfer";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_toList",
        type: "address[]",
      },
      {
        name: "_valueList",
        type: "uint256[]",
      },
    ],
    name: "batchTransfer",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ea806100206000396000f3fe60806040526004361061001e5760003560e01c806388d695b214610023575b600080fd5b6100e56004803603604081101561003957600080fd5b81019060208101813564010000000081111561005457600080fd5b82018360208201111561006657600080fd5b8035906020019184602083028401116401000000008311171561008857600080fd5b9193909290916020810190356401000000008111156100a657600080fd5b8201836020820111156100b857600080fd5b803590602001918460208302840111640100000000831117156100da57600080fd5b5090925090506100e7565b005b82811461013e5760408051600160e51b62461bcd02815260206004820152601960248201527f4172726179206c656e67746820697320646966666572656e7400000000000000604482015290519081900360640190fd5b6000805b8282101561017c5761016f84848481811061015957fe5b905060200201358261025a90919063ffffffff16565b6001909201919050610142565b8034146101d35760408051600160e51b62461bcd02815260206004820152601960248201527f496e636f7272656374207472616e7366657220616d6f756e7400000000000000604482015290519081900360640190fd5b600091505b84821015610252578585838181106101ec57fe5b905060200201356001600160a01b03166001600160a01b03166108fc85858581811061021457fe5b905060200201359081150290604051600060405180830381858888f19350505050158015610246573d6000803e3d6000fd5b506001909101906101d8565b505050505050565b6000828201838110156102b75760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fea165627a7a7230582043f2afd88d5941cc489fcaeca1f585ffe9b93e29c2ed80559f897446f3b684770029";

type KlayBatchTransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KlayBatchTransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KlayBatchTransfer__factory extends ContractFactory {
  constructor(...args: KlayBatchTransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KlayBatchTransfer> {
    return super.deploy(overrides || {}) as Promise<KlayBatchTransfer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KlayBatchTransfer {
    return super.attach(address) as KlayBatchTransfer;
  }
  connect(signer: Signer): KlayBatchTransfer__factory {
    return super.connect(signer) as KlayBatchTransfer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KlayBatchTransferInterface {
    return new utils.Interface(_abi) as KlayBatchTransferInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KlayBatchTransfer {
    return new Contract(address, _abi, signerOrProvider) as KlayBatchTransfer;
  }
}
